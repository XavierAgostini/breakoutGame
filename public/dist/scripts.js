"use strict";function draw(){ctx.clearRect(0,0,canvasWidth,canvasHeight),ctx.fillStyle="black",paddlePosition(),ctx.fillRect(paddle.posX,paddle.posY,paddle.width,paddle.height),ballPhysics(),refreshBlocks(blocks),ctx.beginPath(),ctx.arc(ball.posX,ball.posY,ball.radius,0,2*Math.PI,!1),ctx.fillStyle="white",ctx.fill(),ctx.stroke(),updateScore()}function generateInitialBlocks(){for(var l=blockWidth,e=blockHeight,a=0,t=0,o=0,s=[],i=0;i<5;i++){a=12,t+=e+5;for(var c=0;c<10;c++)ctx.fillStyle=blockColors[i],ctx.fillRect(a,t,l,e),s.push({id:o,posX:a,posY:t,color:blockColors[i],level:i,active:!0}),a+=l+5,o++}return s}function refreshBlocks(l){for(var e=0,a=0;a<l.length;a++)blockHit(l[a])&&(gameComplete()&&gameOver(),e++,e>1&&(ball.velY*=-1)),l[a].active&&(ctx.fillStyle=l[a].color,ctx.fillRect(l[a].posX,l[a].posY,blockWidth,blockHeight))}function blockHit(l){var e=!1,a=blocks[blocks.length-1].posY+blockHeight;if(ball.posY-ball.radius<=a&&l.active)for(var t=({x:ball.posX,y:ball.posY-ball.radius},{x:ball.posX+ball.radius,y:ball.posY},{x:ball.posX,y:ball.posY+ball.radius},{x:ball.posX-ball.radius,y:ball.posY},0);t<360;t++){var o=ball.posX+ball.radius*Math.cos(t*Math.PI/180),s=ball.posY-ball.radius*Math.sin(t*Math.PI/180);if(o>=l.posX&&o<=l.posX+blockWidth&&s<=l.posY+blockHeight&&s>=l.posY){e=!0,ball.velY*=-1,score+=40-10*l.level+1;break}}return!!e&&(blocks[l.id].active=!1,!0)}function paddlePosition(){paddle.posX+=paddle.velX*interval,paddle.posX=paddle.posX>=canvasWidth-paddle.width?canvasWidth-paddle.width:paddle.posX,paddle.posX=paddle.posX<=0?0:paddle.posX}function ballPhysics(){if(ball.posY+=ball.velY*interval,ball.posX+=ball.velX*interval,ball.posY+ball.radius>=canvasHeight&&(console.log("bottom wall hit"),lifeLost()),ball.posY-ball.radius<=0&&(console.log("top wall hit"),ball.velY*=-1),ball.posX+ball.radius>=canvasWidth&&(console.log("right wall hit"),ball.velX*=-1),ball.posX-ball.radius<=0&&(console.log("left wall hit"),ball.velX*=-1),ball.posY>=canvasHeight-paddleHeight-paddleHeightOffset&&ball.posX-ball.radius<=paddle.posX+paddle.width&&ball.posX+ball.radius>=paddle.posX){console.log("paddle hit"),ball.velY*=-1;var l=ball.posX/(paddle.posX+.5*paddle.width)-1;ball.velX=l>.5?.5:l}}function updateScore(){var l="Score: "+score,e="Lives: "+numLives;ctx.font="30px sans-serif",ctx.fillText(l,10,50),ctx.fillText(e,350,50)}function lifeLost(){numLives--,0==numLives&&gameOver(),ball.posY=ballStart}function gameComplete(){for(var l=0;l<blocks.length;l++)if(blocks[l].active)return!1;return!0}function gameOver(){console.log("Game Over"),clearInterval(game),setTimeout(function(){ctx.clearRect(0,0,canvasWidth,canvasHeight);var l=localStorage.getItem("highScore");score>l?highScore=score:highScore,localStorage.setItem("highScore",highScore),newGameBtn.style.display="inline";var e="GAME OVER",a="Your Score: "+score,t="Your High score: "+highScore;ctx.font="30px sans-serif",ctx.fillText(e,150,50),ctx.fillText(a,150,150),ctx.fillText(t,150,200)},interval)}var canvas=document.getElementById("myCanvas"),canvasOffset=canvas.getBoundingClientRect().left;console.log("offset-left: ",canvasOffset);var canvasHeight=800,canvasWidth=500,ctx=canvas.getContext("2d"),interval=10,blockColors=["red","#064df1","#33f106","#8037dd","yellow"],blockWidth=43,blockHeight=25,blocks=generateInitialBlocks(),paddleHeight=15,paddleHeightOffset=40,paddleSpeed=.5,paddle={posX:(canvasWidth-50)/2,posY:canvasHeight-paddleHeightOffset,velX:0,velY:0,width:100,height:15},ballStart=200,ball={radius:10,posX:400,posY:ballStart,accelX:0,accelY:0,velX:0,velY:.2},score=0,numLives=1,highScore=localStorage.getItem("highScore")||0,newGameBtn=document.getElementById("newGameBtn"),game=setInterval(draw,interval);canvas.addEventListener("mousemove",function(l){var e=l.clientX-canvasOffset;l.clientY;paddle.posX=e}),document.addEventListener("keydown",function(l){37==l.keyCode?paddle.velX=-paddleSpeed:39==l.keyCode&&(paddle.velX=paddleSpeed)}),document.addEventListener("keyup",function(l){37!=l.keyCode&&39!=l.keyCode||(paddle.velX=0)}),newGameBtn.addEventListener("click",function(l){newGameBtn.style.display="none",blocks=generateInitialBlocks(),numLives=1,score=0,game=setInterval(draw,interval)});
"use strict";console.log("working");var x=[1,2,3];x=x.map(function(o){return o+1}),console.log(x);
//# sourceMappingURL=data:application/json;base64,
