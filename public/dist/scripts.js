"use strict";function _classCallCheck(t,s){if(!(t instanceof s))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function t(t,s){for(var i=0;i<s.length;i++){var e=s[i];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(t,e.key,e)}}return function(s,i,e){return i&&t(s.prototype,i),e&&t(s,e),s}}();console.log("working");var Game=function(){function t(){_classCallCheck(this,t),this.canvas=document.getElementById("myCanvas"),this.ctx=canvas.getContext("2d"),this.canvasOffset=canvas.getBoundingClientRect().left,this.canvasWidth=500,this.canvasHeight=800,this.interval=10,this.score=new Score,this.highScore=0,this.numLives=3,this.blockWidth=43,this.blockHeight=25,this.blocks=new Blocks(this.score),this.paddle=new Paddle((this.canvasWidth-100)/2,this.canvasHeight-40,this.canvas),this.ball=new Ball(this.canvasWidth/2,400)}return _createClass(t,[{key:"drawBlocks",value:function(){for(var t=0;t<this.blocks.blockArr.length;t++){var s=this.blocks.blockArr[t];s.active&&(this.ctx.fillStyle=s.colour,this.ctx.fillRect(s.posX,s.posY,s.width,s.height))}}},{key:"drawPaddle",value:function(){this.ctx.fillStyle=this.paddle.colour,this.ctx.fillRect(this.paddle.posX,this.paddle.posY,this.paddle.width,this.paddle.height)}},{key:"drawBall",value:function(){ctx.beginPath(),ctx.arc(this.ball.posX,this.ball.posY,this.ball.radius,0,2*Math.PI,!1),ctx.fillStyle=this.ball.colour,ctx.fill(),ctx.stroke()}},{key:"drawScreen",value:function(){ctx.clearRect(0,0,canvasWidth,canvasHeight),this.paddle.updatePosition(),this.ball.ballPhysics(this.interval,this.canvasWidth,this.canvasHeight,this.paddle,this.blocks),this.blocks.updateBlocks(this.ball),this.score.writeScore(),this.drawBlocks(),this.drawPaddle(),this.drawBall()}},{key:"startGame",value:function(){var t=this;setInterval(function(){t.drawScreen()},t.interval)}}]),t}(),Score=function(){function t(){_classCallCheck(this,t),this.score=0,this.numLives=3,this.highScore=0}return _createClass(t,[{key:"updateScore",value:function(t){this.score+=t}},{key:"writeScore",value:function(){var t="Score: "+this.score,s="Lives: "+this.numLives;ctx.font="30px sans-serif",ctx.fillText(t,10,25),ctx.fillText(s,350,25)}},{key:"resetScore",value:function(){this.score=0}}]),t}(),Ball=function(){function t(s,i){_classCallCheck(this,t),this.colour="white",this.radius=10,this.posX=s,this.posY=i,this.velX=0,this.velY=.2}return _createClass(t,[{key:"ballPhysics",value:function(t,s,i,e,h){if(this.posY+=this.velY*t,this.posX+=this.velX*t,this.posY+this.radius>=i&&(console.log("bottom wall hit"),lifeLost(),this.velY*=-1),this.posY-this.radius<=0&&(console.log("top wall hit -a"),this.velY*=-1),this.posX+this.radius>=s&&(console.log("right wall hit -a"),this.velX*=-1),this.posX-this.radius<=0&&(console.log("left wall hit -a"),this.velX*=-1),this.posY>=i-e.height-e.heightOffset&&this.posX-this.radius<=e.posX+e.width&&this.posX+this.radius>=e.posX){console.log("paddle hit -a"),this.velY*=-1;var a=this.posX/(e.posX+.5*e.width)-1;this.velX=a>.5?.5:a}}},{key:"get",value:function(t){return this[t]}}]),t}(),Paddle=function(){function t(s,i,e){_classCallCheck(this,t),this.colour="black",this.width=100,this.height=15,this.heightOffset=40,this.posX=s,this.posY=i,this.velX=0,this.speed=.5,this.canvas=e,this.canvasOffset=e.getBoundingClientRect().left;var h=this;document.addEventListener("keydown",function(t){37==t.keyCode?h.velX=-h.speed:39==t.keyCode&&(h.velX=h.speed)}),document.addEventListener("keyup",function(t){37!=t.keyCode&&39!=t.keyCode||(h.velX=0)}),this.canvas.addEventListener("mousemove",function(t){var s=t.clientX-h.canvasOffset;h.posX=s})}return _createClass(t,[{key:"updatePosition",value:function(){this.posX+=this.velX*interval,this.posX=this.posX>=canvasWidth-this.width?canvasWidth-this.width:this.posX,this.posX=this.posX<=0?0:this.posX}},{key:"get",value:function(t){return this[t]}}]),t}(),Block=function(){function t(s,i,e,h,a,l,o,c){_classCallCheck(this,t),this.id=s,this.level=i,this.active=e,this.colour=h,this.posX=a,this.posY=l,this.width=o,this.height=c}return _createClass(t,[{key:"get",value:function(t){return this[t]}},{key:"blockHit",value:function(t){var s=!1,i=this.posY+this.height;if(t.posY-t.radius<=i&&this.active)for(var e=0;e<360;e++){var h=t.posX+t.radius*Math.cos(e*Math.PI/180),a=t.posY-t.radius*Math.sin(e*Math.PI/180);if(h>=this.posX&&h<=this.posX+this.width&&a<=this.posY+this.height&&a>=this.posY){s=!0,t.velY*=-1;break}}return!!s&&(this.active=!1,!0)}}]),t}(),Blocks=function(){function t(s){_classCallCheck(this,t),this.blockArr=this.generateBlocks(),this.score=s}return _createClass(t,[{key:"generateBlocks",value:function(){for(var t=43,s=25,i=0,e=0,h=["red","#064df1","#33f106","#8037dd","yellow"],a=0,l=[],o=0;o<5;o++){i=12,e+=s+5;for(var c=0;c<10;c++){var n=new Block(a,o,(!0),h[o],i,e,t,s);l.push(n),i+=t+5,a++}}return l}},{key:"updateBlocks",value:function(t){for(var s=0,i=0;i<this.blockArr.length;i++)this.blockArr[i].active&&this.blockArr[i].blockHit(t)&&(s++,s>1&&(t.velY*=-1),this.score.updateScore(40-10*this.blockArr[i].level+1))}},{key:"get",value:function(t){return console.log(t),this[t]}}]),t}(),game=new Game;game.startGame();
"use strict";function draw(){ctx.clearRect(0,0,canvasWidth,canvasHeight),ctx.fillStyle="black",paddlePosition(),ctx.fillRect(paddle.posX,paddle.posY,paddle.width,paddle.height),ballPhysics(),refreshBlocks(blocks),ctx.beginPath(),ctx.arc(ball.posX,ball.posY,ball.radius,0,2*Math.PI,!1),ctx.fillStyle="white",ctx.fill(),ctx.stroke(),updateScore()}function generateInitialBlocks(){for(var l=blockWidth,e=blockHeight,a=0,t=0,o=0,s=[],i=0;i<5;i++){a=12,t+=e+5;for(var c=0;c<10;c++)ctx.fillStyle=blockColors[i],ctx.fillRect(a,t,l,e),s.push({id:o,posX:a,posY:t,color:blockColors[i],level:i,active:!0}),a+=l+5,o++}return s}function refreshBlocks(l){for(var e=0,a=0;a<l.length;a++)blockHit(l[a])&&(gameComplete()&&gameOver(),e++,e>1&&(ball.velY*=-1)),l[a].active&&(ctx.fillStyle=l[a].color,ctx.fillRect(l[a].posX,l[a].posY,blockWidth,blockHeight))}function blockHit(l){var e=!1,a=blocks[blocks.length-1].posY+blockHeight;if(ball.posY-ball.radius<=a&&l.active)for(var t=({x:ball.posX,y:ball.posY-ball.radius},{x:ball.posX+ball.radius,y:ball.posY},{x:ball.posX,y:ball.posY+ball.radius},{x:ball.posX-ball.radius,y:ball.posY},0);t<360;t++){var o=ball.posX+ball.radius*Math.cos(t*Math.PI/180),s=ball.posY-ball.radius*Math.sin(t*Math.PI/180);if(o>=l.posX&&o<=l.posX+blockWidth&&s<=l.posY+blockHeight&&s>=l.posY){e=!0,ball.velY*=-1,score+=40-10*l.level+1;break}}return!!e&&(blocks[l.id].active=!1,!0)}function paddlePosition(){paddle.posX+=paddle.velX*interval,paddle.posX=paddle.posX>=canvasWidth-paddle.width?canvasWidth-paddle.width:paddle.posX,paddle.posX=paddle.posX<=0?0:paddle.posX}function ballPhysics(){if(ball.posY+=ball.velY*interval,ball.posX+=ball.velX*interval,ball.posY+ball.radius>=canvasHeight&&(console.log("bottom wall hit"),lifeLost()),ball.posY-ball.radius<=0&&(console.log("top wall hit"),ball.velY*=-1),ball.posX+ball.radius>=canvasWidth&&(console.log("right wall hit"),ball.velX*=-1),ball.posX-ball.radius<=0&&(console.log("left wall hit"),ball.velX*=-1),ball.posY>=canvasHeight-paddleHeight-paddleHeightOffset&&ball.posX-ball.radius<=paddle.posX+paddle.width&&ball.posX+ball.radius>=paddle.posX){console.log("paddle hit"),ball.velY*=-1;var l=ball.posX/(paddle.posX+.5*paddle.width)-1;ball.velX=l>.5?.5:l}}function updateScore(){var l="Score: "+score,e="Lives: "+numLives;ctx.font="30px sans-serif",ctx.fillText(l,10,50),ctx.fillText(e,350,50)}function lifeLost(){numLives--,0==numLives&&gameOver(),ball.posY=ballStart}function gameComplete(){for(var l=0;l<blocks.length;l++)if(blocks[l].active)return!1;return!0}function gameOver(){console.log("Game Over"),clearInterval(game),setTimeout(function(){ctx.clearRect(0,0,canvasWidth,canvasHeight);var l=localStorage.getItem("highScore");score>l?highScore=score:highScore,localStorage.setItem("highScore",highScore),newGameBtn.style.display="inline";var e="GAME OVER",a="Your Score: "+score,t="Your High score: "+highScore;ctx.font="30px sans-serif",ctx.fillText(e,150,50),ctx.fillText(a,150,150),ctx.fillText(t,150,200)},interval)}var canvas=document.getElementById("myCanvas"),canvasOffset=canvas.getBoundingClientRect().left;console.log("offset-left: ",canvasOffset);var canvasHeight=800,canvasWidth=500,ctx=canvas.getContext("2d"),interval=10,blockColors=["red","#064df1","#33f106","#8037dd","yellow"],blockWidth=43,blockHeight=25,paddleHeight=15,paddleHeightOffset=40,paddleSpeed=.5,paddle={posX:(canvasWidth-50)/2,posY:canvasHeight-paddleHeightOffset,velX:0,velY:0,width:100,height:15},ballStart=200,ball={radius:10,posX:400,posY:ballStart,accelX:0,accelY:0,velX:0,velY:.2},score=0,numLives=1,highScore=localStorage.getItem("highScore")||0,newGameBtn=document.getElementById("newGameBtn");canvas.addEventListener("mousemove",function(l){var e=l.clientX-canvasOffset;l.clientY;paddle.posX=e}),document.addEventListener("keydown",function(l){37==l.keyCode?paddle.velX=-paddleSpeed:39==l.keyCode&&(paddle.velX=paddleSpeed)}),document.addEventListener("keyup",function(l){37!=l.keyCode&&39!=l.keyCode||(paddle.velX=0)}),newGameBtn.addEventListener("click",function(l){newGameBtn.style.display="none",blocks=generateInitialBlocks(),numLives=1,score=0,game=setInterval(draw,interval)});
//# sourceMappingURL=data:application/json;base64,
